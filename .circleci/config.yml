# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2

general:
    branches:
        only:
            - master
            - dev

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

        #    working_directory: ~/repo/backend/lidar
    working_directory: ~/project

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "backend/lidar/pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn -f backend/lidar/pom.xml dependency:go-offline

      - run: 
          name: Install MariaDB, node, and npm
          command: |
            sudo apt install -y mariadb-server
            sudo service mysql start
      - run:
          name: Setup db
          command: |
            echo "CREATE DATABASE lidarDB" | sudo mysql -u root  
            sudo mysql -u root "lidarDB" < test_dump.sql
            echo "CREATE USER aaa IDENTIFIED BY 'bbb';" | sudo mysql -u root
            echo "GRANT ALL PRIVILEGES ON *.* TO 'aaa'@localhost IDENTIFIED BY 'bbb';" | sudo mysql -u root
      - run:
          name: Start database
          command: sudo service mysql start

      - run:
          name: Populate Database
          command: |
              echo "CREATE DATABASE lidarDB" | sudo mysql -u root  
              sudo mysql -u root "lidarDB" < backend/lidar/test_dump.sql
              echo "CREATE USER aaa IDENTIFIED BY 'bbb';" | sudo mysql -u root
              echo "GRANT ALL PRIVILEGES ON *.* TO 'aaa'@localhost IDENTIFIED BY 'bbb';" | sudo mysql -u root
      - save_cache:
          paths:
            - ~/.m2
          key: login-cache-v1-{{ checksum "pom.xml" }}
      - run: 
          name: Install MariaDB
          command: |
            sudo apt install -y mariadb-server
            sudo service mysql start
      - run:
          name: Setup db
          command: |
            echo "CREATE DATABASE Login" | sudo mysql -u root  
            sudo mysql -u root "Login" < test_dump.sql
            echo "CREATE USER aaa IDENTIFIED BY 'bbb';" | sudo mysql -u root
            echo "GRANT ALL PRIVILEGES ON *.* TO 'aaa'@localhost IDENTIFIED BY 'bbb';" | sudo mysql -u root
      - run:
          name: Run Tests
          command: mvn -f pom.xml integration-test

      - run:
          name: Run backend tests
          command: mvn -f backend/lidar/pom.xml integration-test

      - run:
          name: "Deploy to production"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              cd frontend
              npm install
              npm run build
              tar -cf frontend.tar build/*
              scp -oStrictHostKeyChecking=no frontend.tar ubuntu@lidar.icedcoffee.dev:
              ssh ubuntu@lidar.icedcoffee.dev "tar -xf frontend.tar && rm frontend.tar && cp -r build/* /var/www/html && rm -r build"

              cd ..
              mvn -f backend/lidar/pom.xml install
              scp -oStrictHostKeyChecking=no backend/lidar/target/lidar-0.0.1-SNAPSHOT.jar ubuntu@lidar.icedcoffee.dev:
                #ssh ubuntu@lidar.icedcoffee.dev "sudo killall java && sudo java -jar lidar-0.0.1-SNAPSHOT.jar &"
            fi

