version: 2.1

jobs:
  get_code:
    docker:
      - image: cimg/base:2020.01
    working_directory: ~/lidar
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/lidar

  test_frontend:
    docker:
      - image: circleci/node:latest
    working_directory: ~/lidar/frontend
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: npm-cache-v1-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          key: npm-cache-v1-{{ checksum "package-lock.json" }}
          paths:
            - /home/circleci/.npm
      - run:
          name: Run Tests
          command: npm test

  test_backend:
    docker:
      - image: circleci/openjdk:latest
    working_directory: ~/lidar/backend/lidar
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: backend-cache-v1-{{ checksum "pom.xml" }}
      - run: mvn -f pom.xml dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: backend-cache-v1-{{ checksum "pom.xml" }}
      - run:
          name: Install MariaDB
          command: |
            sudo apt install -y mariadb-server
            sudo service mysql start
      - run:
          name: Setup db
          command: |
            echo "CREATE DATABASE lidarDB" | sudo mysql -u root
            sudo mysql -u root "lidarDB" < test_dump.sql
            echo "CREATE USER aaa IDENTIFIED BY 'bbb';" | sudo mysql -u root
            echo "GRANT ALL PRIVILEGES ON *.* TO 'aaa'@localhost IDENTIFIED BY 'bbb';" | sudo mysql -u root
      - run:
          name: Run Tests
          command: mvn -f pom.xml integration-test

  test_login:
    docker:
      - image: circleci/python:latest
    working_directory: ~/lidar/Login
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: pip3 install Flask Flask-Cors pytest mysql-connector-python mysqlclient scrypt waitress
      - run:
          name: Install MariaDB
          command: |
            sudo apt install -y mariadb-server
            sudo service mysql start
      - run:
          name: Setup db
          command: |
            echo "CREATE DATABASE Account" | sudo mysql -u root
            sudo mysql -u root "Account" < database_schema2.sql
            sudo mysql -u root "Account" < organisation_perm.sql
            echo "CREATE USER aaa IDENTIFIED BY 'bbb';" | sudo mysql -u root
            echo "GRANT ALL PRIVILEGES ON *.* TO 'aaa'@localhost IDENTIFIED BY 'bbb';" | sudo mysql -u root
      - run:
          name: Run Tests
          command: pytest

  deploy_frontend:
    docker:
      - image: circleci/node:latest
    working_directory: ~/lidar/frontend
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: npm-cache-v1-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci
      - run:
          name: Use remote path
          command: sed "s/http:\/\/localhost:6000/https:\/\/lidar.icedcoffee.dev\/api/g" src/redux/actions.js > src/redux/actions.js
      - run:
          name: Build
          command: npm run build
      - run:
          name: Deploy
          command: |
            tar -cf frontend.tar build/*
            scp -o StrictHostKeyChecking=no frontend.tar ubuntu@lidar.icedcoffee.dev:
            ssh -o StrictHostKeyChecking=no ubuntu@lidar.icedcoffee.dev "tar -xf frontend.tar && rm frontend.tar && cp -r build/* /var/www/html && rm -r build"

  deploy_backend:
    docker:
      - image: circleci/openjdk:latest
    working_directory: ~/lidar/backend/lidar
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: mvn-cache-v1-{{ checksum "pom.xml" }}

  deploy_login:
    docker:
      - image: circleci/python:latest
    working_directory: ~/lidar
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Deploy
          command: |
            tar -cf Login.tar Login/*
            scp -o StrictHostKeyChecking=no Login.tar ubuntu@lidar.icedcoffee.dev:
            ssh -o StrictHostKeyChecking=no ubuntu@lidar.icedcoffee.dev "tar -xf Login.tar && python3 Login/Server.py"

workflows:
  version: 2
  workflow:
    jobs:
      - get_code
      - test_frontend:
          filters:
            branches:
              only:
                - master
                - dev
                - fontend
          requires:
            - get_code
      - test_backend:
          filters:
            branches:
              only:
                - master
                - dev
                - backend
          requires:
            - get_code
      - test_login:
          filters:
            branches:
              only:
                - master
                - dev
                - Login
          requires:
            - get_code
      - deploy_frontend:
          filters:
            branches:
              only: master
          requires:
            - test_frontend
            - test_backend
            - test_login
      - deploy_backend:
          filters:
            branches:
              only: master
          requires:
            - test_frontend
            - test_backend
            - test_login
      - deploy_login:
          filters:
            branches:
              only: master
          requires:
            - test_frontend
            - test_backend
            - test_login
